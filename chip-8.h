/* chip-8.h */
#pragma once
#include <stdint.h>

#define S_WIDTH 640
#define OPCODE_MAX 0xFF66 /* Top limit for opcodes */
#define S_HEIGHT 320
#define MEM_SIZE 0x1000
#define START_ADDR 0x200 /* Where programs start in RAM */
#define TOTAL_RAM 4096
#define RAM_LIMIT 0xE8F /* Adressable top limit For user programs */
#define STACK_SIZE 0xF


/*TODO: Make this struct private */
typedef struct {
    uint8_t video[64 * 32];
    uint8_t memory[MEM_SIZE];
    uint8_t V[0x10];
    uint16_t i_register;
    uint16_t pc;          /* Program counter */
    uint16_t sp;          /* Stack pointer */
                          /* TODO: Add SDL delay timer & sound timer */
    uint16_t stack[0x10]; /* TODO: Move it to memory */
    uint8_t key[16];    /* Implement as bitmap? */
    uint8_t dly_timer;
    uint8_t snd_timer;

} chp8_t;

// chp8_t *c8;
chp8_t *init_chip();
uint8_t chip_rand();
// void execute(uint16_t op);
void execute(chp8_t *c8, uint16_t op);
void cycle(chp8_t *c8, bool *event);

static const uint8_t fontset[] = {
    0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
    0x20, 0x60, 0x20, 0x20, 0x70, // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
    0x90, 0x90, 0xF0, 0x10, 0x10, // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
    0xF0, 0x10, 0x20, 0x40, 0x40, // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
    0xF0, 0x90, 0xF0, 0x90, 0x90, // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
    0xF0, 0x80, 0x80, 0x80, 0xF0, // C
    0xE0, 0x90, 0x90, 0x90, 0xE0, // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
    0xF0, 0x80, 0xF0, 0x80, 0x80  // F
};
